version: "3.7"

networks:
  kajappka:

services:
  kajappka-verifier-mock:
    build:
      context: verifier-mock
      dockerfile: docker/production/Dockerfile
    networks:
      kajappka:

  kajappka-rating-service-db:
    image: mongo
    networks:
      kajappka:

  kajappka-rating-service:
    build:
      context: rating-service
      dockerfile: docker/production/Dockerfile
    environment:
      HOST: "0.0.0.0"
      PORT: 8080
      VERIFIER_URI: "http://kajappka-verifier-mock:8000/success"
      MONGO_CONNECTION_STRING: "mongodb://kajappka-rating-service-db:27017/"
      MONGO_DB_NAME: "ratings"
      MONGO_COLLECTION_NAME: "ratings"
    networks:
      kajappka:
    depends_on:
      - kajappka-rating-service-db
      - kajappka-verifier-mock

  kajappka-vote-service-db:
    image: mongo
    networks:
      kajappka:
    environment:
      MONGO_INITDB_ROOT_USERNAME: votes
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: votes

  kajappka-vote-service:
    build:
      context: vote-service
      dockerfile: docker/production/Dockerfile
    environment:
      DATABASE_URI: mongodb://kajappka-vote-service-db:secret@db
      AUTH_URL: http://kajappka-verifier-mock:8000/success
      DATABASE: votes
    networks:
      kajappka:

  kajappka-game-service:
    build:
      context: game-service
      dockerfile: docker/production/Dockerfile
    environment:
      VERIFIER_URI: "http://kajappka-verifier-mock:8000/success"
      DB_PATH: "/var/games/db.sqlite"
    volumes:
      - "kajappka-game-service-db:/var/games"
    networks:
      kajappka:

  kajappka-proxy:
    image: caddy:alpine
    volumes:
      - "./caddy:/etc/caddy"
    networks:
      kajappka:
    ports:
      - "8000:8000"

volumes:
  kajappka-game-service-db:
